action: fire-dom-event
browser_mod:
  service: browser_mod.popup
  data:
    title: Compute
    style: >
      --popup-max-width: calc(385px + 385px + 385px);
      --ha-card-border-radius: 0;
    card_mod:
      style:
        layout-card:
          $grid-layout$:
            # card divider border
            .: |
              #root {
                  margin: -24px 0 !important;
              }
            hui-entities-card:
              $: |
                .card-content {
                  padding: var(--tablet-popup-content-padding);
                  padding-bottom: 0.8em;
                }
                ha-card {
                  border-right: 1.5px solid rgba(0, 0, 0, 0.2);
                  border-radius: 0;
                  transition: none;
                }
                /* portrait */
                @media screen and (max-width: 1200px) {
                  ha-card {
                    border-right: none;
                    border-bottom: 1.5px solid rgba(0, 0, 0, 0.2);
                  }
                }
              $hui-horizontal-stack-card:
                # horizontal bottom buttons
                $: |
                  #root {
                    justify-content: space-evenly;
                    margin-top: 1.7em;
                    max-width: 82vw; /* iphonex */
                  }
    content:
      type: custom:layout-card
      layout_type: custom:grid-layout
      layout:
        margin: 0
        grid-template-columns: 385px 385px 385px
        grid-template-rows: 1fr
        grid-template-areas: |
          "hass docker nas"
        mediaquery:
          #portrait
          "(max-width: 1200px)":
            grid-template-columns: 1fr
            grid-template-rows: repeat(3, 1fr)
            grid-template-areas: |
              "hass"
              "docker"
              "nas"
      cards:

        ### HOME ASSISTANT

        - type: entities
          view_layout:
            grid-area: hass
          title: Home Assistant
          show_header_toggle: false
          card_mod:
            class: header
          entities:
            - entity: sensor.current_version
              name: Version
              icon: mdi:home-assistant

            - type: attribute
              entity: sensor.docker_home_assistant
              attribute: uptime
              format: relative
              name: Since Boot
              icon: mdi:update

            - type: custom:bar-card
              width: 55%
              height: 2em
              decimal: 0
              unit_of_measurement: '%'
              positions: &bar_card_positions
                icon: outside
                indicator: 'off'
                name: outside
              severity: &bar_card_severity
                - color: '#6d2525'
                  from: 85
                  to: 999
              entity_row: true
              entities:

                - entity: sensor.docker_home_assistant
                  attribute: cpu_percentage
                  name: Processor
                  icon: mdi:chip

                - entity: sensor.docker_home_assistant
                  attribute: memory_percentage
                  name: Minne
                  icon: mdi:memory


            - type: custom:hui-horizontal-stack-card
              cards:
                - type: custom:button-card
                  name: Restart HASS
                  icon: mdi:reload
                  tap_action:
                    action: call-service
                    service: browser_mod.sequence
                    service_data:
                      sequence:
                        - service: browser_mod.notification
                          data:
                            message: Restart Server
                        - service: browser_mod.delay
                          data:
                            time: 3000
                        - service: homeassistant.restart
                  template: icon_name

                - type: custom:button-card
                  name: Container
                  icon: mdi:reload
                  tap_action:
                    action: call-service
                    service: browser_mod.sequence
                    service_data:
                      sequence:
                        - service: browser_mod.notification
                          data:
                            message: Restart container
                        - service: homeassistant.save_persistent_states
                        - service: browser_mod.delay
                          data:
                            time: 3000
                        - service: shell_command.restart_container
                  template: icon_name

        ### DOCKER

        - type: entities
          view_layout:
            grid-area: docker
          title: Docker
          state_color: true
          show_header_toggle: false
          card_mod:
            class: header
          entities:

            - type: custom:bar-card
              width: 55%
              height: 2em
              decimal: 0
              unit_of_measurement: '%'
              positions: *bar_card_positions
              severity: *bar_card_severity
              entity_row: true
              entities:

                - entity: sensor.docker_1cpu
                  name: Processor

                - entity: sensor.docker_memory_percent
                  name: Memory

            - entity: sensor.docker_containers_total
              name: Number of containers

            - entity: sensor.docker_containers_running
              name: Containers running

            - entity: sensor.docker_containers_paused
              name: Containers paused

            - entity: sensor.docker_containers_stopped
              name: Containers Stopped

          footer:
            type: custom:apexcharts-card
            layout: minimal
            graph_span: 1h
            locale: en
            apex_config:
              chart:
                fontFamily: var(--primary-font-family)
                height: 135px
              tooltip:
                style:
                  fontSize: 14px
                x:
                  show: true
                  format: dddd HH:mm
              xaxis:
                crosshairs:
                  show: false
              legend:
                fontSize: 14px
                fontWeight: 400
                itemMargin:
                  horizontal: 25
                formatter: |
                  EVAL: (seriesName, opts) => {
                    var arr = opts.w.globals.series[opts.seriesIndex],
                      value = arr[arr.length - 1],
                      convert = (value/1024).toFixed(2);
                    return value == null
                      ? seriesName : value < 1024 ? `${Math.round(value)} kB/s`
                      : `${convert} MB/s`;
                  }
                markers:
                  width: 26
                  height: 23
                  customHTML:
                    - 'EVAL:() => {return `<ha-icon icon="mdi:arrow-down-bold" style="--mdc-icon-size: 23px;"></ha-icon>`}'
                    - 'EVAL:() => {return `<ha-icon icon="mdi:arrow-up-bold" style="--mdc-icon-size: 23px;"></ha-icon>`}'
                  fillColors:
                    - none
                    - none
              fill:
                type: gradient
                gradient:
                  type: vertical
                  opacityFrom: 0.8
                  opacityTo: 0
                  stops:
                    - 0
                    - 99
                    - 100
              stroke:
                width: 3
            all_series_config:
              type: area
              fill_raw: last
            series:
              - entity: sensor.transmission_down_speed
                name: Torrent Throughput
                color: green
              - entity: sensor.transmission_active_torrents
                name: In progress
                color: '#385581'

        ### NAS

        - type: entities
          view_layout:
            grid-area: nas
          title: Raspberry PI
          show_header_toggle: false
          card_mod:
            class: header
            # no border on last card
            style: |
              ha-card {
                border: none !important;
              }
          entities:
            - entity: sensor.last_boot
              name: Last Restart

            - type: custom:bar-card
              width: 55%
              height: 2em
              decimal: 0
              unit_of_measurement: '%'
              positions: *bar_card_positions
              severity: *bar_card_severity
              entity_row: true
              entities:

                - entity: sensor.processor_use
                  name: Processor
                  icon: mdi:chip
                  tap_action:
                    action: call-service
                    service: homeassistant.update_entity
                    service_data:
                      entity_id: sensor.processor_use

                - entity: sensor.memory_use_percent
                  name: Memory 4GB
                  tap_action:
                    action: call-service
                    service: homeassistant.update_entity
                    service_data:
                      entity_id: sensor.memory_use_percent



          footer:
            type: custom:apexcharts-card
            layout: minimal
            graph_span: 1w
            locale: en
            apex_config:
              chart:
                fontFamily: var(--primary-font-family)
                height: 135px
              tooltip:
                style:
                  fontSize: 14px
                x:
                  show: true
                  format: dddd HH:mm
              xaxis:
                crosshairs:
                  show: false
              legend:
                fontSize: 14px
                fontWeight: 400
                itemMargin:
                  horizontal: 25
                formatter: |
                  EVAL: (seriesName, opts) => {
                    var arr = opts.w.globals.series[opts.seriesIndex],
                      value = arr[arr.length - 1],
                      convert = (value/1024).toFixed(2);
                    return value == null
                      ? seriesName : value < 1024 ? `${Math.round(value)} mb/s`
                      : `${convert} MB/s`;
                  }
                markers:
                  width: 26
                  height: 23
                  customHTML:
                    - 'EVAL:() => {return `<ha-icon icon="mdi:arrow-down-bold" style="--mdc-icon-size: 23px;"></ha-icon>`}'
                    - 'EVAL:() => {return `<ha-icon icon="mdi:arrow-up-bold" style="--mdc-icon-size: 23px;"></ha-icon>`}'
                  fillColors:
                    - none
                    - none
              fill:
                type: gradient
                gradient:
                  type: vertical
                  opacityFrom: 0.8
                  opacityTo: 0
                  stops:
                    - 0
                    - 99
                    - 100
              stroke:
                width: 3
            all_series_config:
              type: area
              fill_raw: last
            series:
              - entity: sensor.speedtest_download
                name: Down
                color: green
              - entity: sensor.speedtest_upload
                name: Up
                color: '#385581'
