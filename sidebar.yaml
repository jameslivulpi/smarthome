- binary_sensor:
    - name: temp
      device_class: heat
      state: >
          {% if is_state('input_boolean.temperature', 'off') %}
            off
          {% elif is_state('input_boolean.temperaturee', 'on') %}
            on
          {% endif %}

    - name: bedroom temp
      device_class: heat
      state: >
          {% if is_state('input_boolean.bedroom_temperature', 'off') %}
            off
          {% elif is_state('input_boolean.bedroom_temperature', 'on') %}
            on
          {% endif %}


- sensor:
    - unique_id: domain_counter
      state: >
          {{ states | count }}
      attributes:
          automation: >
            {{ states.automation | count }}
          binary_sensor: >
            {{ states.binary_sensor | count }}
          device_tracker: >
            {{ states.device_tracker | count }}
          light: >
            {{ states.light | count }}
          media_player: >
            {{ states.media_player | count }}
          sensor: >
            {{ states.sensor | count }}
          switch: >
            {{ states.switch | count }}
          other: >
            {% set exclude = this.attributes | list %}
            {{ states | rejectattr('domain', 'in', exclude) | list | count }}
    - unique_id: sidebar
      state: template
      attributes:
        time: >
          {% set hours = now().strftime('%H') %}
          {% set minutes = now().strftime('%M') %}
          {% set formatted = now().strftime("%-I:%M %p") %}
          <span class="time">
            {{ formatted }}
          </span>
        date: >
          <font color='#6a7377'><b>
          {% if strptime(states('sensor.date'), '%Y-%m-%d').day != None %}
          {% set days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'] %}
          {% set months = ['January', 'February', 'March', 'April', 'May', 'June',
          'July', 'August', 'September', 'October', 'November', 'December'] %}
            {{ days[now().weekday()] }}<br>
            {{ strptime(states('sensor.date'), '%Y-%m-%d').day }} {{ months[now().month-1] }}
          {% endif %}
          </b></font>
        greet: >
          <b>
          {% set time = now().hour %}
          {% if time <= 1 %} Goodnight {{'\U0001F611'}}
          {% elif time <= 3 %} Goodnight  {{'\U0001F62A'}}
          {% elif time <= 5 %} Goodnight {{'\U0001F634'}}
          {% elif time <= 7 %} Good Morning {{'\U0001F4A9'}}
          {% elif time <= 9 %} Good Morning {{'\u2615\uFE0F'}}
          {% elif time <= 10 %} Good Morning {{'\U0001F642'}}
          {% elif time <= 13 %} Good Afternoon {{'\U0001F60A'}}
          {% elif time <= 15 %} Good Afternoon {{'\U0001F60E'}}
          {% elif time <= 17 %} Good Afternoon {{'\U0001F44B\U0001F3FB'}}
          {% elif time <= 19 %} Good Evening {{'\U0001F44B\U0001F3FB'}}
          {% elif time <= 22 %} Good Evening {{'\U0001F60C'}}
          {% elif time <= 23 %} Good Evening {{'\U0001F974'}}
          {% else %} Good Morning {{'\U0001F974'}}
          {% endif %}
          </b>
        active: >
          <b>
          {% set lights = [
             states.light.shelly_entrance,
             states.light.kitchen_sink_light,
             states.light.kitchen_light,
             states.light.living_room_1,
             states.light.living_room_2,
             states.light.upstairs_hallway,
             states.light.dining_room,
             states.light.bedroom_danielle,
             states.light.bedroom_james,
             states.light.bedroom_corner,
             states.light.office_2,
             states.light.office_lamp_edison,
             states.light.shelly_basement,
             states.light.shelly_backyard_switch,
             states.light.shelly_kitchen
          ] %}

          {% set devices = [
            states.media_player.living_room_fire_tv,
            states.media_player.bedroom_fire_tv,
            states.media_player.office_tv
          ] %}

          {% set lights_on = lights | selectattr('state','eq','on') | list %}
          {% set lights_name = lights | selectattr('state','eq','on') | map(attribute='name') | join(', ') %}

          {% set devices_on = devices | selectattr('state','search','(on|heat|fan_only|playing)') | list %}
          {% set devices_name = devices_on | map(attribute='name') | join(', ') %}

          {% if (lights_on | length == 0) and (devices_on | length > 0) %}
            {{ devices_name | regex_replace(',([^,]*)$',' and\\1') }} is on

          {% elif (lights_on | length == 1) and (devices_on | length == 1) %}
            {{ lights_name }} on {{devices_name }} is on

          {% elif (lights_on | length == 1) and (devices_on | length > 1) %}
            {{ lights_name }}, {{ devices_name | regex_replace(',([^,]*)$',' and\\1') }} är på

          {% elif (lights_on | length > 1) and (devices_on | length == 1) %}
            {{ lights_on | length }} lights {{ devices_name }} are on

          {% elif (lights_on | length > 1) and (devices_on | length > 1) %}
            {{ lights_on | length }} lights, {{ devices_name | regex_replace(',([^,]*)$',' and\\1') }} are on

          {% elif (lights_on | length == 1) and (devices_on | length == 0) %}
            {{ lights_name | title }} is on

          {% elif (lights_on | length > 1) and (devices_on | length == 0) %}
            {{ lights_on | length }} lights are on

          {% else %}
            <font color='#6a7377'>All lights off</font>
          {% endif %}
          </b>
        mailbox: >
          {% set mailbox = states('sensor.mailbox') %}
          {% if mailbox | int(default=0) > 0 %}
            {{ '\U0001F4EC' }} <font color='#6a7377'><b>Brevlåda ({{ mailbox }})</b></font>
          {% endif %}

        contact: >
          {% set intrusion = states.binary_sensor
            | selectattr('entity_id', 'search', 'intrusion')
            | map(attribute = 'entity_id') | list %}
          {% for sensor in intrusion if states(sensor) == 'on' %}
            {% if loop.first  %} {{'\u26A0\uFE0F'}} {{'\U0001F6AA'}} Open {% else %}, {% endif %}
            {{ state_attr(sensor, 'friendly_name') | title | replace('Intrusion', ' ') }}
          {% endfor %}

        battery: >
          {% set entities = states.sensor
            | selectattr('entity_id', 'search', 'battery')
            | rejectattr('entity_id', 'search', 'iphone')
            | map(attribute = 'entity_id') | list %}
          {% for sensor in entities if states(sensor) != 'unknown' and states(sensor) !=
          'unavailable' and states(sensor) !=
          'idle' and states(sensor) != 'None' and states(sensor) | int(default=0) <= 5 %}
            {% if loop.first %} {{'\u26A0\uFE0F'}} Battery {% else %}, {% endif %}
            {{ state_attr(sensor, 'friendly_name') }} {{ states(sensor) }}%
          {% endfor %}

